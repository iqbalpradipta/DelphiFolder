unit UPOS_Login;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Mask, RzEdit, RzLabel,
  Vcl.ExtCtrls, RzPanel;

type
  TfrmLogin = class(TForm)
    RzPanel1: TRzPanel;
    RzPanel2: TRzPanel;
    RzLabel1: TRzLabel;
    RzLabel2: TRzLabel;
    RzEdUserName: TRzEdit;
    RzEdPassword: TRzEdit;
    procedure RzEdUserNameKeyPress(Sender: TObject; var Key: Char);
    procedure RzEdPasswordKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmLogin: TfrmLogin;

implementation
USES UPOS_DM, UPOS_IqbalPradipta;
{$R *.dfm}

procedure TfrmLogin.RzEdPasswordKeyPress(Sender: TObject; var Key: Char);
var I : Integer;
begin
  if key = Chr(13) then
    begin
       with DM.FDQuGlobal do
        begin
          sql.Clear;
          sql.Add('SELECT * FROM vUsers WHERE IDUSER =:A AND PASSWORD =:B');
          Params[0].AsString := RzEdUserName.Text;
          Params[1].AsString := RzEdPassword.Text;
          Open;
        end;

        if DM.FDQuGlobal.RecordCount <> 0 then
          Begin
             frmMain.vUsers := DM.FDQuGlobal.FieldByName('IDUSER').AsString;
             frmMain.vUsersName := DM.FDQuGlobal.FieldByName('USERNAME').AsString;
             DM.FDQuGlobal.First;
             while not DM.FDQuGlobal.Eof do
                begin
                  for I := 0 to frmMain.ActionList1.ActionCount - 1 do
                   begin
                       if frmMain.ActionList1.Actions[i].Name = DM.FDQuGlobal.FieldByName('FORMNAME').AsString then
                        if DM.FDQuGlobal.FieldByName('MARK').AsBoolean = True then
                          frmMain.ActionList1.Actions[i].Visible := True;
                   end;
                  DM.FDQuGlobal.Next;
                end;

                frmMain.StatusBar1.Panels[0].Text := 'Welcome' + frmMain.vUsersName;
                Close;
          End
          else
          Begin
            MessageDlg('Invalid User or Password!',mtWarning,[mbOK], 0);
            RzEdUserName.SetFocus;
            Abort;
          End;

    end;
end;

procedure TfrmLogin.RzEdUserNameKeyPress(Sender: TObject; var Key: Char);
begin
  if key = Chr(13) then
    RzEdPassword.SetFocus;
end;

end.
